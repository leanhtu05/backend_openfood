import time
from firebase_integration import firebase
from groq_integration import groq_service
from models import WeeklyMealPlan, NutritionTarget
import services

print("\n===== KIỂM TRA TẠO THỰC ĐƠN BẰNG GROQ AI VÀ LƯU VÀO FIREBASE =====")

print("\n--- Kiểm tra Groq ---")
print(f"Groq available: {groq_service.available}")
print(f"Using model: {getattr(groq_service, 'model', 'unknown')}")
print(f"Quota exceeded: {groq_service.quota_exceeded}")

if not groq_service.available:
    print("ERROR: Groq không khả dụng, vui lòng kiểm tra API key và cài đặt thư viện")
    exit(1)

print("\n--- Kiểm tra Firebase ---")
print(f"Firebase initialized: {firebase.initialized}")

if not firebase.initialized:
    print("ERROR: Firebase không được khởi tạo, vui lòng kiểm tra credentials")
    exit(1)

# Tạo thử kế hoạch thực đơn bằng Groq AI
user_id = "test_groq_ai"  # Sử dụng ID người dùng riêng cho bài test này
print(f"\n--- Tạo thực đơn cho user '{user_id}' bằng Groq AI ---")

try:
    # Thiết lập thông số dinh dưỡng
    calories_target = 2000
    protein_target = 90
    fat_target = 65
    carbs_target = 250
    
    print(f"Mục tiêu dinh dưỡng: {calories_target}kcal, {protein_target}g protein, {fat_target}g chất béo, {carbs_target}g carbs")
    
    # Test bữa sáng trước để kiểm tra Groq AI
    print("\nTest tạo món ăn cho bữa sáng...")
    breakfast_meals = groq_service.generate_meal_suggestions(
        calories_target=calories_target // 4,  # 25% cho bữa sáng
        protein_target=protein_target // 4,
        fat_target=fat_target // 4,
        carbs_target=carbs_target // 4,
        meal_type="bữa sáng",
        preferences=["trái cây", "sữa"],
        allergies=["hải sản"],
        use_ai=True  # Sử dụng Groq AI
    )
    
    # Kiểm tra kết quả
    print(f"Groq AI đã tạo {len(breakfast_meals) if breakfast_meals else 0} món ăn cho bữa sáng")
    if breakfast_meals:
        print("Danh sách món:")
        for i, meal in enumerate(breakfast_meals):
            print(f"  {i+1}. {meal.get('name', 'Không tên')}")
    
    # Tạo kế hoạch thực đơn đầy đủ bằng services
    print("\nTạo kế hoạch thực đơn đầy đủ bằng services...")
    meal_plan = services.generate_weekly_meal_plan(
        calories_target=calories_target,
        protein_target=protein_target,
        fat_target=fat_target,
        carbs_target=carbs_target,
        preferences=["trái cây", "rau xanh", "thịt gà"],
        allergies=["hải sản", "đậu phộng"],
        cuisine_style="Việt Nam",
        use_ai=True  # Sử dụng Groq AI
    )
    
    if meal_plan and meal_plan.days:
        print(f"Đã tạo kế hoạch thực đơn với {len(meal_plan.days)} ngày")
        
        # Đếm số món ăn
        dish_count = 0
        for day in meal_plan.days:
            day_dishes = (
                len(day.breakfast.dishes if day.breakfast and day.breakfast.dishes else []) + 
                len(day.lunch.dishes if day.lunch and day.lunch.dishes else []) + 
                len(day.dinner.dishes if day.dinner and day.dinner.dishes else [])
            )
            dish_count += day_dishes
            print(f"Ngày {day.day_of_week}: {day_dishes} món ăn")
        
        print(f"Tổng số món ăn: {dish_count}")
        
        # Lưu vào Firestore
        print("\nLưu kế hoạch thực đơn vào Firestore...")
        plan_id = firebase.save_meal_plan(meal_plan, user_id)
        
        if plan_id:
            print(f"Đã lưu kế hoạch thực đơn vào Firestore với ID: {plan_id}")
            
            # Kiểm tra xem có thể đọc lại được không
            print("\nKiểm tra đọc lại từ Firestore...")
            loaded_plan = firebase.load_meal_plan(user_id)
            
            if loaded_plan:
                print(f"Đã đọc lại kế hoạch thực đơn thành công với {len(loaded_plan.days)} ngày")
                print("\nTrạng thái: ✅ Đã tạo thực đơn bằng Groq AI và lưu vào Firestore thành công")
            else:
                print("Không thể đọc lại kế hoạch thực đơn từ Firestore")
                print("\nTrạng thái: ❌ Lưu thực đơn thành công nhưng không đọc lại được")
        else:
            print("Không thể lưu kế hoạch thực đơn vào Firestore")
            print("\nTrạng thái: ❌ Tạo thực đơn thành công nhưng không lưu được vào Firestore")
    else:
        print("Không thể tạo kế hoạch thực đơn")
        print("\nTrạng thái: ❌ Không thể tạo thực đơn bằng Groq AI")
        
except Exception as e:
    print(f"Lỗi khi tạo thực đơn: {str(e)}")
    import traceback
    traceback.print_exc()
    print("\nTrạng thái: ❌ Lỗi khi tạo hoặc lưu thực đơn")

print("\n===== KẾT THÚC KIỂM TRA =====") 